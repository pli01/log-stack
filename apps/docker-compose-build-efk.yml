version: '3.0'
networks:
  prodnetwork:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450
services:
  nginx:
    image: "${nginx_image_full}"
    depends_on:
      - kibana
    networks:
      prodnetwork:
        aliases:
          - nginx
    ports:
      - 80:80
    restart: always
#    volumes:
#      - "${efk_stack_conf_dir}/nginx/efk_80.conf:/etc/nginx/conf.d/default.conf:ro"

  fluentd:
    image: "${fluentd_image_full}"
    build:
      context: fluentd
      dockerfile: Dockerfile
      args:
        - http_proxy=$http_proxy
        - https_proxy=$https_proxy
        - no_proxy=$no_proxy
        - RUBY_URL
        - MIRROR_DEBIAN

    depends_on:
      - elasticsearch
    restart: always
    networks:
      prodnetwork:
        aliases:
          - fluentd
    ports:
      - 24224:24224
      - 5140:5140
      - 514:10514/udp
#    volumes:
#      - "${efk_stack_conf_dir}/fluentd/conf:/fluentd/etc:rw"

  elasticsearch:
    image: "${elasticsearch_image_full}"
    restart: always
    networks:
      prodnetwork:
        aliases:
          - elasticsearch
    ports:
      - 9200:9200
#    volumes:
#      - "${efk_stack_data_dir}/esdata:/usr/share/elasticsearch/data"
    environment:
      - cluster.name=docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ulimits:
      memlock:
        soft: -1
        hard: -1

  kibana:
    image: "${kibana_image_full}"
    ports: [ '5601' ]
    depends_on:
      - elasticsearch
    restart: always
    networks:
      prodnetwork:
        aliases:
          - kibana
    environment:
      - SERVER_BASEPATH=/kibana

  curator:
    image: "${curator_image_full}"
    build:
      context: curator
      dockerfile: Dockerfile
      args:
        - http_proxy=$http_proxy
        - https_proxy=$https_proxy
        - no_proxy=$no_proxy
        - PYPI_URL
        - PYPI_HOST
        - MIRROR_DEBIAN
    depends_on:
      - elasticsearch
    restart: always
    networks:
      prodnetwork:
        aliases:
          - curator
#    volumes:
#      - "${efk_stack_conf_dir}/curator/config:/config:ro"

  heartbeat:
    image: "${heartbeat_image_full}"
    user: root
    networks:
      prodnetwork:
        aliases:
          - heartbeat
#    volumes:
#      - "${efk_stack_conf_dir}/heartbeat:/heartbeat:ro"
#      - heartbeat:/usr/share/heartbeat/data
    command: ["--strict.perms=false", "--path.config", "/heartbeat"]

  metricbeat:
    image: "${metricbeat_image_full}"
    user: root
    network_mode: host
#    volumes:
#      - "${efk_stack_conf_dir}/metricbeat:/metricbeat:ro"
#      - metricbeat:/usr/share/metricbeat/data
#      - /var/run/docker.sock:/var/run/docker.sock
#      - /proc:/hostfs/proc:ro
#      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
#      - /:/hostfs:ro
    command: ["--strict.perms=false", "--path.config", "/metricbeat", "-system.hostfs=/hostfs"]
#    command: ["--strict.perms=false", "--path.config", "/metricbeat"]
#    extra_hosts:
#      - "elasticsearch:192.168.48.2" # The IP to access host from container
#      - "kibana:192.168.48.3" # The IP to access host from container
#    environment:
#      - ELASTICSEARCH_HOST=${ELASTICSEARCH_HOST:-node1}
#      - KIBANA_HOST=${KIBANA_HOST:-node1}
#      - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME:-elastic}
#      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD:-changeme}
#
#volumes:
#  metricbeat:
#  heartbeat:
